[build-system]
requires = ["poetry-core>=1.0.0", ]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "sekoia-automation-sdk"

version = "1.18.0"
description = "SDK to create Sekoia.io playbook modules"
license = "MIT"
readme = "README.md"
authors = ["Sekoia.io"]
packages = [
    { include = "sekoia_automation" },
]
homepage = "https://sekoia.io/"
repository = "https://github.com/SEKOIA-IO/sekoia-automation-sdk"
documentation = "https://docs.sekoia.io/"
keywords = ["SDK", "Sekoia.io", "automation", "playbook"]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Intended Audience :: Developers",
    "Topic :: Security",
    "Topic :: Software Development :: Libraries"
]

[tool.poetry.scripts]
sekoia-automation = 'sekoia_automation.cli:app'

[tool.poetry.dependencies]
python = "^3.10"
requests = "^2.25"
requests-ratelimiter = "^0.7.0"
sentry-sdk = "*"
tenacity = "*"
boto3 = "^1.28"
s3path = "^0.5"
orjson = "^3.8"
pydantic = "^1.10"
typer = { extras = ["all"], version = "^0.12"}
cookiecutter = "^2.1"
python-slugify = "^5.0.2"
PyYAML = "^6.0"
Jinja2 = "^3.0.3"
black = "*"  # To format files in cli tools
poetry = "*" # To lock requirements when creating new module
prometheus-client = "^0.21.0"
aiohttp = { version = "^3.8.4", optional = true }
aiolimiter = { version = "^1.1.0", optional = true }
aiobotocore = { version = "^2.5.2", optional = true }
aiofiles = { version = "^23.1.0", optional = true }
aiocsv = { version = "^1.2.4", optional = true }
loguru = { version = "^0.7.0", optional = true }
jsonschema = "^4.22.0"

[tool.poetry.group.dev.dependencies]
unittest-xml-reporting = "^3"
pylint = "*"
pytest = "^8.3.3"
pytest-cov = "*"
pytest-asyncio = "^0.24.0"
pytest-xdist = "*"
pytest-env = "^1.1.5"
requests-mock = "^1.9"
faker = "^30.0.0"
aioresponses = { git = "https://github.com/pnuckowski/aioresponses.git", rev = "444aa498cd2f625edd7923355fa373972d5fcf44" }
pre-commit = "^3.3.3"
requests-oauthlib = "^2.0.0"

[tool.poetry.group.lint.dependencies]
ruff = "^0.6.8"
mypy = "*"

[tool.poetry.extras]
all = [
    "aiohttp",
    "aiolimiter",
    "aiobotocore",
    "aiofiles",
    "aiocsv",
    "loguru",
]
async-aws = [
    "aiobotocore",
]
async-http = [
    "aiohttp",
    "aiolimiter",
    "aiofiles",
]
async-files = [
    "aiofiles",
    "aiocsv"
]
logging = [
    "loguru"
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = '''
    --asyncio-mode=auto
    --cache-clear
    --cov=sekoia_automation
    --cov-report=html
    --cov-report=term-missing:skip-covered
    --cov-fail-under=90
    -ra
'''
testpaths = [
    "tests",
]

[tool.ruff]
target-version = "py310"
fix = true
exclude = [
    "tests/expectations/sample_module/main.py",
    "tests/aio/",
    "sekoia_automation/scripts/new_module/template/"
]

[tool.ruff.lint]
select = ["A", "ARG", "E", "F", "I", "N", "RUF", "UP", "W"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["ARG"]  # Ignore unusued args because of pytest fixtures

[tool.mypy]
python_version = "3.10"
install_types = true
non_interactive = true
ignore_missing_imports = true
show_column_numbers = true
exclude = [
    "sekoia_automation/scripts/new_module/template/",
    "tests/"
]
disable_error_code = "annotation-unchecked"
packages = ["sekoia_automation"]
